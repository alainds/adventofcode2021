{"ast":null,"code":"import { input } from \"data/input7\"; //Pas fier des nommages\n\nconst sacs = input.split(\"\\n\").map(a => {\n  const b = a.replaceAll(\"bags\", \"\").replaceAll(\"contain\", \"\").replaceAll(\"bag\", \"\").replaceAll(\".\", \"\").replaceAll(\",\", \"\").replaceAll(\"no other\", \"0\").replaceAll(/\\s/g, \"\").trim();\n  const regexp = new RegExp(\"^([a-zA-Z]*)([0-9]*.*)$\");\n  const reg = regexp.exec(b);\n  const name = reg[1];\n  const others = reg[2].match(/[^a-z]+|[a-z]+/gi);\n  const othersNames = others[0] !== 0 ? others.filter((a, i) => i % 2 === 1) : \"\";\n  const othersValues = others.filter((a, i) => i % 2 === 0);\n  const othersObj = othersValues.map((other, index) => {\n    const obj = {};\n\n    if (other) {\n      obj[othersNames[index]] = other;\n    }\n\n    return other ? obj : 0;\n  });\n  const objRes = {};\n  objRes[name] = { ...othersObj\n  };\n  return {\n    name: name,\n    othersNames: othersNames,\n    othersValues\n  };\n});\nconst ONEBAG = \"shinygold\";\nlet sacsZeros = sacs.filter(sac => !sac.othersNames.length).map(s => s.name);\n\nfunction result1() {\n  let sacsAvecZeroFinal = [...sacsZeros];\n  let sacRemplis = [...sacs.filter(sac => sac.othersNames.length && sac.name !== ONEBAG)];\n\n  while (true) {\n    let newSacsZeroFinal = [...sacsAvecZeroFinal];\n    sacRemplis = sacRemplis.map(sac => {\n      return {\n        name: sac.name,\n        othersNames: sac.othersNames.filter(a => !newSacsZeroFinal.includes(a)),\n        othersValues: sac.othersValues.filter((a, i) => !sacsZeros.includes(sac.othersNames[i]))\n      };\n    });\n    sacsAvecZeroFinal = sacsAvecZeroFinal.concat(sacRemplis.filter(sac => !sac.othersNames.length).map(s => s.name));\n    if (sacsAvecZeroFinal.length === newSacsZeroFinal.length) break;\n    sacRemplis = sacRemplis.filter(sac => sac.othersNames.length && sac.name !== ONEBAG);\n  }\n\n  return sacRemplis.length;\n}\n\nfunction result2() {\n  let onebag = sacs.filter(sac => sac.othersNames.length && sac.name === ONEBAG)[0];\n  return getBag(onebag, 0);\n}\n\nconst getBag = function (obj, res = 0) {\n  let newobj = { ...obj\n  };\n  const sacARemplacerName = obj.othersNames[0];\n  const sacARemplacerValue = obj.othersValues[0];\n  const resultat = res + sacARemplacerValue * 1;\n  let newSacs = sacs.filter(a => a.name === sacARemplacerName)[0];\n  const isSacsZeros = sacsZeros.includes(sacARemplacerName);\n  const newOthersNames = isSacsZeros ? [] : newSacs.othersNames;\n  const newOthersValues = isSacsZeros ? [] : newSacs.othersValues.map((a, i) => a * sacARemplacerValue);\n  newobj = {\n    othersNames: [...newOthersNames, ...newobj.othersNames.filter((a, i) => i > 0)],\n    othersValues: [...newOthersValues, ...newobj.othersValues.filter((a, i) => i > 0)]\n  };\n  if (!newobj.othersNames.length) return resultat;\n  return getBag(newobj, resultat);\n};\n\nexport default function getResultats() {\n  return [result1(), result2()];\n}","map":{"version":3,"sources":["d:/Dev/adventofcode2021/src/days/jour7.js"],"names":["input","sacs","split","map","a","b","replaceAll","trim","regexp","RegExp","reg","exec","name","others","match","othersNames","filter","i","othersValues","othersObj","other","index","obj","objRes","ONEBAG","sacsZeros","sac","length","s","result1","sacsAvecZeroFinal","sacRemplis","newSacsZeroFinal","includes","concat","result2","onebag","getBag","res","newobj","sacARemplacerName","sacARemplacerValue","resultat","newSacs","isSacsZeros","newOthersNames","newOthersValues","getResultats"],"mappings":"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","sourcesContent":["import { input } from \"data/input7\"\r\n//Pas fier des nommages\r\nconst sacs = input.split(\"\\n\").map((a) => {\r\n  const b = a\r\n    .replaceAll(\"bags\", \"\")\r\n    .replaceAll(\"contain\", \"\")\r\n    .replaceAll(\"bag\", \"\")\r\n    .replaceAll(\".\", \"\")\r\n    .replaceAll(\",\", \"\")\r\n    .replaceAll(\"no other\", \"0\")\r\n    .replaceAll(/\\s/g, \"\")\r\n    .trim()\r\n  const regexp = new RegExp(\"^([a-zA-Z]*)([0-9]*.*)$\")\r\n\r\n  const reg = regexp.exec(b)\r\n  const name = reg[1]\r\n  const others = reg[2].match(/[^a-z]+|[a-z]+/gi)\r\n  const othersNames =\r\n    others[0] !== 0 ? others.filter((a, i) => i % 2 === 1) : \"\"\r\n  const othersValues = others.filter((a, i) => i % 2 === 0)\r\n  const othersObj = othersValues.map((other, index) => {\r\n    const obj = {}\r\n    if (other) {\r\n      obj[othersNames[index]] = other\r\n    }\r\n    return other ? obj : 0\r\n  })\r\n  const objRes = {}\r\n  objRes[name] = { ...othersObj }\r\n  return { name: name, othersNames: othersNames, othersValues }\r\n})\r\n\r\nconst ONEBAG = \"shinygold\"\r\nlet sacsZeros = sacs.filter((sac) => !sac.othersNames.length).map((s) => s.name)\r\n\r\nfunction result1() {\r\n  let sacsAvecZeroFinal = [...sacsZeros]\r\n  let sacRemplis = [\r\n    ...sacs.filter((sac) => sac.othersNames.length && sac.name !== ONEBAG),\r\n  ]\r\n  while (true) {\r\n    let newSacsZeroFinal = [...sacsAvecZeroFinal]\r\n    sacRemplis = sacRemplis.map((sac) => {\r\n      return {\r\n        name: sac.name,\r\n        othersNames: sac.othersNames.filter(\r\n          (a) => !newSacsZeroFinal.includes(a)\r\n        ),\r\n        othersValues: sac.othersValues.filter(\r\n          (a, i) => !sacsZeros.includes(sac.othersNames[i])\r\n        ),\r\n      }\r\n    })\r\n    sacsAvecZeroFinal = sacsAvecZeroFinal.concat(\r\n      sacRemplis.filter((sac) => !sac.othersNames.length).map((s) => s.name)\r\n    )\r\n    if (sacsAvecZeroFinal.length === newSacsZeroFinal.length) break\r\n    sacRemplis = sacRemplis.filter(\r\n      (sac) => sac.othersNames.length && sac.name !== ONEBAG\r\n    )\r\n  }\r\n  return sacRemplis.length\r\n}\r\n\r\nfunction result2() {\r\n  let onebag = sacs.filter(\r\n    (sac) => sac.othersNames.length && sac.name === ONEBAG\r\n  )[0]\r\n\r\n  return getBag(onebag, 0)\r\n}\r\nconst getBag = function (obj, res = 0) {\r\n  let newobj = { ...obj }\r\n  const sacARemplacerName = obj.othersNames[0]\r\n  const sacARemplacerValue = obj.othersValues[0]\r\n  const resultat = res + sacARemplacerValue * 1\r\n  let newSacs = sacs.filter((a) => a.name === sacARemplacerName)[0]\r\n  const isSacsZeros = sacsZeros.includes(sacARemplacerName)\r\n  const newOthersNames = isSacsZeros ? [] : newSacs.othersNames\r\n  const newOthersValues = isSacsZeros\r\n    ? []\r\n    : newSacs.othersValues.map((a, i) => a * sacARemplacerValue)\r\n  newobj = {\r\n    othersNames: [\r\n      ...newOthersNames,\r\n      ...newobj.othersNames.filter((a, i) => i > 0),\r\n    ],\r\n    othersValues: [\r\n      ...newOthersValues,\r\n      ...newobj.othersValues.filter((a, i) => i > 0),\r\n    ],\r\n  }\r\n  if (!newobj.othersNames.length) return resultat\r\n\r\n  return getBag(newobj, resultat)\r\n}\r\n\r\nexport default function getResultats() {\r\n  return [result1(), result2()]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}