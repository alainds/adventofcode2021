{"ast":null,"code":"import { input } from \"../data/input2\";\nimport { transformData, reducerSum } from \"util/array\";\nconst dataBrut = input.split(\"\\n\");\nconst data = transformData(dataBrut);\n\nfunction result1() {\n  const dataOk = data.map(i => {\n    return i.pass && i.pass.split(i.lettre).length - 1 >= i.min && i.pass.split(i.lettre).length - 1 <= i.max ? 1 : 0;\n  });\n  return dataOk.reduce(reducerSum);\n}\n\nfunction result2() {\n  const dataOk = data.map(i => {\n    const passArray = i.pass.split(\"\");\n    const lettreInPos1 = passArray[i.min - 1] === i.lettre;\n    const lettreInPos2 = passArray[i.max - 1] === i.lettre;\n    return lettreInPos1 && !lettreInPos2 || !lettreInPos1 && lettreInPos2 ? 1 : 0;\n  });\n  const result = dataOk.reduce(reducerSum);\n  return result;\n}\n\nexport default function getResultats() {\n  return [result1(), result2()];\n}","map":{"version":3,"sources":["d:/Dev/adventofcode2021/src/days/jour2.js"],"names":["input","transformData","reducerSum","dataBrut","split","data","result1","dataOk","map","i","pass","lettre","length","min","max","reduce","result2","passArray","lettreInPos1","lettreInPos2","result","getResultats"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAY,IAAZ,CAAjB;AAEA,MAAMC,IAAI,GAAGJ,aAAa,CAACE,QAAD,CAA1B;;AAEA,SAASG,OAAT,GAAmB;AACjB,QAAMC,MAAM,GAAGF,IAAI,CAACG,GAAL,CAAUC,CAAD,IAAO;AAC7B,WAAOA,CAAC,CAACC,IAAF,IACLD,CAAC,CAACC,IAAF,CAAON,KAAP,CAAaK,CAAC,CAACE,MAAf,EAAuBC,MAAvB,GAAgC,CAAhC,IAAqCH,CAAC,CAACI,GADlC,IAELJ,CAAC,CAACC,IAAF,CAAON,KAAP,CAAaK,CAAC,CAACE,MAAf,EAAuBC,MAAvB,GAAgC,CAAhC,IAAqCH,CAAC,CAACK,GAFlC,GAGH,CAHG,GAIH,CAJJ;AAKD,GANc,CAAf;AAOA,SAAOP,MAAM,CAACQ,MAAP,CAAcb,UAAd,CAAP;AACD;;AACD,SAASc,OAAT,GAAmB;AACjB,QAAMT,MAAM,GAAGF,IAAI,CAACG,GAAL,CAAUC,CAAD,IAAO;AAC7B,UAAMQ,SAAS,GAAGR,CAAC,CAACC,IAAF,CAAON,KAAP,CAAa,EAAb,CAAlB;AACA,UAAMc,YAAY,GAAGD,SAAS,CAACR,CAAC,CAACI,GAAF,GAAQ,CAAT,CAAT,KAAyBJ,CAAC,CAACE,MAAhD;AACA,UAAMQ,YAAY,GAAGF,SAAS,CAACR,CAAC,CAACK,GAAF,GAAQ,CAAT,CAAT,KAAyBL,CAAC,CAACE,MAAhD;AACA,WAAQO,YAAY,IAAI,CAACC,YAAlB,IAAoC,CAACD,YAAD,IAAiBC,YAArD,GACH,CADG,GAEH,CAFJ;AAGD,GAPc,CAAf;AAQA,QAAMC,MAAM,GAAGb,MAAM,CAACQ,MAAP,CAAcb,UAAd,CAAf;AACA,SAAOkB,MAAP;AACD;;AACD,eAAe,SAASC,YAAT,GAAwB;AACrC,SAAO,CAACf,OAAO,EAAR,EAAYU,OAAO,EAAnB,CAAP;AACD","sourcesContent":["import { input } from \"../data/input2\"\r\nimport { transformData, reducerSum } from \"util/array\"\r\n\r\nconst dataBrut = input.split(\"\\n\")\r\n\r\nconst data = transformData(dataBrut)\r\n\r\nfunction result1() {\r\n  const dataOk = data.map((i) => {\r\n    return i.pass &&\r\n      i.pass.split(i.lettre).length - 1 >= i.min &&\r\n      i.pass.split(i.lettre).length - 1 <= i.max\r\n      ? 1\r\n      : 0\r\n  })\r\n  return dataOk.reduce(reducerSum)\r\n}\r\nfunction result2() {\r\n  const dataOk = data.map((i) => {\r\n    const passArray = i.pass.split(\"\")\r\n    const lettreInPos1 = passArray[i.min - 1] === i.lettre\r\n    const lettreInPos2 = passArray[i.max - 1] === i.lettre\r\n    return (lettreInPos1 && !lettreInPos2) || (!lettreInPos1 && lettreInPos2)\r\n      ? 1\r\n      : 0\r\n  })\r\n  const result = dataOk.reduce(reducerSum)\r\n  return result\r\n}\r\nexport default function getResultats() {\r\n  return [result1(), result2()]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}