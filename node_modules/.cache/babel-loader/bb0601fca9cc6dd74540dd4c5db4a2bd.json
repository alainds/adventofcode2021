{"ast":null,"code":"import { input } from \"data/input10\";\nimport { reducerSum } from \"util/array\";\nconst dataBrut = input.split(\"\\n\");\nconst adapters = dataBrut.map(a => parseInt(a));\n\nfunction result1() {\n  const adapterMax = Math.max(...adapters);\n  const diffs = getAdapters(adapters, adapterMax).diffs;\n  return diffs.filter(d => d === 1).length * diffs.filter(d => d === 3).length;\n}\n\nfunction result2() {\n  const adapterMax = Math.max(...adapters);\n  const diffsMin = getAdapters(adapters, adapterMax).diffs;\n  const adaptersSuiteMin = getAdapters(adapters, adapterMax).adaptersSuiteMin;\n  let diffCourant = diffsMin.length - 1;\n  let nbPossibilites = [{\n    adapter: adaptersSuiteMin[adaptersSuiteMin.length - 1],\n    n: 1\n  }];\n\n  while (diffCourant >= 0) {\n    const adapterCourant = adaptersSuiteMin[diffCourant];\n    let possibilitesAdapter = [];\n    const diffDiffCourant = diffsMin[diffCourant];\n    const diffDiffCourant1 = diffsMin[diffCourant + 1];\n    const diffDiffCourant2 = diffsMin[diffCourant + 2];\n\n    if (diffDiffCourant2 && diffDiffCourant2 + diffDiffCourant1 + diffDiffCourant <= 3) {\n      possibilitesAdapter = [adaptersSuiteMin[diffCourant + 1], adaptersSuiteMin[diffCourant + 2], adaptersSuiteMin[diffCourant + 3]];\n    } else if (diffDiffCourant1 && diffDiffCourant1 + diffDiffCourant <= 3) {\n      possibilitesAdapter = [adaptersSuiteMin[diffCourant + 1], adaptersSuiteMin[diffCourant + 2]];\n    } else {\n      possibilitesAdapter = [adaptersSuiteMin[diffCourant + 1]];\n    }\n\n    const nbPossibilitesAdapterCourant = possibilitesAdapter.map(adapterPossible => nbPossibilites.filter(a => a.adapter === adapterPossible)[0].n);\n    nbPossibilites.push({\n      adapter: adapterCourant,\n      n: nbPossibilitesAdapterCourant.reduce(reducerSum)\n    });\n    diffCourant--;\n  }\n\n  return nbPossibilites[nbPossibilites.length - 1].n;\n}\n\nexport default function getResultats() {\n  return [result1(), result2()];\n}\n\nfunction getAdapters(adapters, adapterMax, comp = x => Math.min(x)) {\n  const JOLTS_INIT = 0;\n  const diffs = [];\n  const possibleDiffs = [1, 2, 3];\n  let adapter = JOLTS_INIT;\n  let adaptersSuite = [adapter];\n\n  while (adapter < adapterMax) {\n    const possibleAdapters = possibleDiffs.map(a => a + adapter);\n    const possibleAdapterDiffs = adapters.filter(a => possibleAdapters.includes(a));\n    const nextAdapter = Math.min(...possibleAdapterDiffs);\n    adaptersSuite.push(nextAdapter);\n    diffs.push(nextAdapter - adapter);\n    adapter = nextAdapter;\n  }\n\n  diffs.push(3);\n  adaptersSuite.push(adapterMax + 3);\n  return {\n    diffs,\n    adaptersSuiteMin: adaptersSuite\n  };\n}\n\nfunction result1b() {\n  //plus simple\n  const getDiffs = adapters => adapters.sort((a, b) => a > b).map((a, i) => i > 0 ? a - adapters[i - 1] : a);\n\n  const adaptersWithEnd = [...adapters];\n  adaptersWithEnd.push(adapters[adapters - 1] + 3);\n  const diffs = getDiffs(adaptersWithEnd);\n  return diffs.filter(d => d === 1).length * diffs.filter(d => d === 3).length;\n}","map":{"version":3,"sources":["d:/Dev/adventofcode2021/src/days/jour10.js"],"names":["input","reducerSum","dataBrut","split","adapters","map","a","parseInt","result1","adapterMax","Math","max","diffs","getAdapters","filter","d","length","result2","diffsMin","adaptersSuiteMin","diffCourant","nbPossibilites","adapter","n","adapterCourant","possibilitesAdapter","diffDiffCourant","diffDiffCourant1","diffDiffCourant2","nbPossibilitesAdapterCourant","adapterPossible","push","reduce","getResultats","comp","x","min","JOLTS_INIT","possibleDiffs","adaptersSuite","possibleAdapters","possibleAdapterDiffs","includes","nextAdapter","result1b","getDiffs","sort","b","i","adaptersWithEnd"],"mappings":"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","sourcesContent":["import { input } from \"data/input10\"\r\nimport { reducerSum } from \"util/array\"\r\n\r\nconst dataBrut = input.split(\"\\n\")\r\nconst adapters = dataBrut.map((a) => parseInt(a))\r\nfunction result1() {\r\n  const adapterMax = Math.max(...adapters)\r\n  const diffs = getAdapters(adapters, adapterMax).diffs\r\n  return (\r\n    diffs.filter((d) => d === 1).length * diffs.filter((d) => d === 3).length\r\n  )\r\n}\r\n\r\nfunction result2() {\r\n  const adapterMax = Math.max(...adapters)\r\n  const diffsMin = getAdapters(adapters, adapterMax).diffs\r\n  const adaptersSuiteMin = getAdapters(adapters, adapterMax).adaptersSuiteMin\r\n\r\n  let diffCourant = diffsMin.length - 1\r\n  let nbPossibilites = [\r\n    { adapter: adaptersSuiteMin[adaptersSuiteMin.length - 1], n: 1 },\r\n  ]\r\n  while (diffCourant >= 0) {\r\n    const adapterCourant = adaptersSuiteMin[diffCourant]\r\n\r\n    let possibilitesAdapter = []\r\n    const diffDiffCourant = diffsMin[diffCourant]\r\n    const diffDiffCourant1 = diffsMin[diffCourant + 1]\r\n    const diffDiffCourant2 = diffsMin[diffCourant + 2]\r\n    if (\r\n      diffDiffCourant2 &&\r\n      diffDiffCourant2 + diffDiffCourant1 + diffDiffCourant <= 3\r\n    ) {\r\n      possibilitesAdapter = [\r\n        adaptersSuiteMin[diffCourant + 1],\r\n        adaptersSuiteMin[diffCourant + 2],\r\n        adaptersSuiteMin[diffCourant + 3],\r\n      ]\r\n    } else if (diffDiffCourant1 && diffDiffCourant1 + diffDiffCourant <= 3) {\r\n      possibilitesAdapter = [\r\n        adaptersSuiteMin[diffCourant + 1],\r\n        adaptersSuiteMin[diffCourant + 2],\r\n      ]\r\n    } else {\r\n      possibilitesAdapter = [adaptersSuiteMin[diffCourant + 1]]\r\n    }\r\n    const nbPossibilitesAdapterCourant = possibilitesAdapter.map(\r\n      (adapterPossible) =>\r\n        nbPossibilites.filter((a) => a.adapter === adapterPossible)[0].n\r\n    )\r\n    nbPossibilites.push({\r\n      adapter: adapterCourant,\r\n      n: nbPossibilitesAdapterCourant.reduce(reducerSum),\r\n    })\r\n    diffCourant--\r\n  }\r\n\r\n  return nbPossibilites[nbPossibilites.length - 1].n\r\n}\r\n\r\nexport default function getResultats() {\r\n  return [result1(), result2()]\r\n}\r\n\r\nfunction getAdapters(adapters, adapterMax, comp = (x) => Math.min(x)) {\r\n  const JOLTS_INIT = 0\r\n  const diffs = []\r\n  const possibleDiffs = [1, 2, 3]\r\n  let adapter = JOLTS_INIT\r\n  let adaptersSuite = [adapter]\r\n  while (adapter < adapterMax) {\r\n    const possibleAdapters = possibleDiffs.map((a) => a + adapter)\r\n    const possibleAdapterDiffs = adapters.filter((a) =>\r\n      possibleAdapters.includes(a)\r\n    )\r\n    const nextAdapter = Math.min(...possibleAdapterDiffs)\r\n    adaptersSuite.push(nextAdapter)\r\n    diffs.push(nextAdapter - adapter)\r\n    adapter = nextAdapter\r\n  }\r\n  diffs.push(3)\r\n  adaptersSuite.push(adapterMax + 3)\r\n  return { diffs, adaptersSuiteMin: adaptersSuite }\r\n}\r\n\r\nfunction result1b() {\r\n  //plus simple\r\n  const getDiffs = (adapters) =>\r\n    adapters\r\n      .sort((a, b) => a > b)\r\n      .map((a, i) => (i > 0 ? a - adapters[i - 1] : a))\r\n  const adaptersWithEnd = [...adapters]\r\n  adaptersWithEnd.push(adapters[adapters - 1] + 3)\r\n  const diffs = getDiffs(adaptersWithEnd)\r\n  return (\r\n    diffs.filter((d) => d === 1).length * diffs.filter((d) => d === 3).length\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}