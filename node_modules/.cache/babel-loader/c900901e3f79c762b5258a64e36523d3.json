{"ast":null,"code":"import { input } from \"data/input20\";\nimport { arraysEqual, reducerMultiply } from \"util/array\"; //ECHEC / plus le temps\n\nfunction result1() {\n  const data = getData();\n  const dataWithCoins = data.map((morceau, i) => {\n    let isCoin = true;\n\n    for (let index = 0; index < data.length; index++) {\n      const morceauA = data[index];\n      const isNO = !arraysEqual(morceau.n, morceauA.n) && !arraysEqual(morceau.n, morceauA.s) && !arraysEqual(morceau.n, morceauA.e) && !arraysEqual(morceau.n, morceauA.o) && !arraysEqual(morceau.s, morceauA.n) && !arraysEqual(morceau.s, morceauA.s) && !arraysEqual(morceau.s, morceauA.e) && !arraysEqual(morceau.s, morceauA.o) && !arraysEqual(morceau.o, morceauA.n) && !arraysEqual(morceau.o, morceauA.s) && !arraysEqual(morceau.o, morceauA.e) && !arraysEqual(morceau.o, morceauA.o) && !arraysEqual(morceau.e, morceauA.n) && !arraysEqual(morceau.e, morceauA.s) && !arraysEqual(morceau.e, morceauA.e) && !arraysEqual(morceau.e, morceauA.o) && isCoin;\n      console.log(morceau.id);\n      console.log(morceauA.id);\n      console.log({\n        isCoin\n      });\n    }\n\n    return { ...morceau,\n      isCoin\n    };\n  });\n  const coins = dataWithCoins.filter(a => a.isCoin);\n  return coins.map(a => a.id).reduce(reducerMultiply);\n}\n\nfunction result2() {\n  return;\n}\n\nexport default function getResultats() {\n  return [result1(), result2()];\n}\n\nfunction getData() {\n  return input.split(\"\\n\\n\").map(a => {\n    const b = a.split(\"\\n\");\n    const regex = /Tile (\\d+):/;\n    const id = regex.exec(b[0])[1];\n    const values = b.filter((e, i) => i > 0).map(e => e.split(\"\"));\n    const n = values[0];\n    const e = values.map((e, i) => e[values.length - 1]).flat();\n    const s = values[values.length - 1];\n    const o = values.map((e, i) => e[0]).flat();\n    return {\n      id,\n      n,\n      e,\n      s,\n      o\n    };\n  });\n}","map":{"version":3,"sources":["d:/Dev/adventofcode2021/src/days/jour20.js"],"names":["input","arraysEqual","reducerMultiply","result1","data","getData","dataWithCoins","map","morceau","i","isCoin","index","length","morceauA","isNO","n","s","e","o","console","log","id","coins","filter","a","reduce","result2","getResultats","split","b","regex","exec","values","flat"],"mappings":"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","sourcesContent":["import { input } from \"data/input20\"\r\nimport { arraysEqual, reducerMultiply } from \"util/array\"\r\n//ECHEC / plus le temps\r\nfunction result1() {\r\n  const data = getData()\r\n  const dataWithCoins = data.map((morceau, i) => {\r\n    let isCoin = true\r\n    for (let index = 0; index < data.length; index++) {\r\n      const morceauA = data[index]\r\n      const isNO =\r\n        !arraysEqual(morceau.n, morceauA.n) &&\r\n        !arraysEqual(morceau.n, morceauA.s) &&\r\n        !arraysEqual(morceau.n, morceauA.e) &&\r\n        !arraysEqual(morceau.n, morceauA.o) &&\r\n        !arraysEqual(morceau.s, morceauA.n) &&\r\n        !arraysEqual(morceau.s, morceauA.s) &&\r\n        !arraysEqual(morceau.s, morceauA.e) &&\r\n        !arraysEqual(morceau.s, morceauA.o) &&\r\n        !arraysEqual(morceau.o, morceauA.n) &&\r\n        !arraysEqual(morceau.o, morceauA.s) &&\r\n        !arraysEqual(morceau.o, morceauA.e) &&\r\n        !arraysEqual(morceau.o, morceauA.o) &&\r\n        !arraysEqual(morceau.e, morceauA.n) &&\r\n        !arraysEqual(morceau.e, morceauA.s) &&\r\n        !arraysEqual(morceau.e, morceauA.e) &&\r\n        !arraysEqual(morceau.e, morceauA.o) &&\r\n        isCoin\r\n      console.log(morceau.id)\r\n      console.log(morceauA.id)\r\n      console.log({ isCoin })\r\n    }\r\n\r\n    return { ...morceau, isCoin }\r\n  })\r\n  const coins = dataWithCoins.filter((a) => a.isCoin)\r\n  return coins.map((a) => a.id).reduce(reducerMultiply)\r\n}\r\n\r\nfunction result2() {\r\n  return\r\n}\r\n\r\nexport default function getResultats() {\r\n  return [result1(), result2()]\r\n}\r\n\r\nfunction getData() {\r\n  return input.split(\"\\n\\n\").map((a) => {\r\n    const b = a.split(\"\\n\")\r\n    const regex = /Tile (\\d+):/\r\n    const id = regex.exec(b[0])[1]\r\n    const values = b.filter((e, i) => i > 0).map((e) => e.split(\"\"))\r\n    const n = values[0]\r\n    const e = values.map((e, i) => e[values.length - 1]).flat()\r\n    const s = values[values.length - 1]\r\n    const o = values.map((e, i) => e[0]).flat()\r\n    return { id, n, e, s, o }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}