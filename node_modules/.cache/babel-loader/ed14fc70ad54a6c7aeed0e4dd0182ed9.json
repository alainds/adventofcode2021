{"ast":null,"code":"import { input } from \"data/input6\";\nimport { reducerSum } from \"util/array\";\nimport { uniq } from \"lodash\";\nconst dataBrut = input.split(\"\\n\\n\");\nconst reponsesBrut = dataBrut.map(a => a.replace(/(\\n)/g, \"\"));\nconst reponsesSansDoublon = reponsesBrut.map(a => {\n  return uniq(a.split(\"\"));\n});\n\nfunction result1() {\n  const nombreYes = reponsesSansDoublon.map(a => a.length);\n  return nombreYes.reduce(reducerSum);\n}\n\nfunction result2() {\n  const reponses = dataBrut.map(a => a.split(\"\\n\"));\n  const nombreYesForAll = reponses.map((reponsesGroupe, index) => reponsesSansDoublon[index].map(reponsePossible => reponsesGroupe.every(reponse => reponse.includes(reponsePossible))).reduce(reducerSum));\n  return nombreYesForAll.reduce(reducerSum);\n}\n\nexport default function getResultats() {\n  return [result1(), result2()];\n}","map":{"version":3,"sources":["d:/Dev/adventofcode2021/src/days/jour6.js"],"names":["input","reducerSum","uniq","dataBrut","split","reponsesBrut","map","a","replace","reponsesSansDoublon","result1","nombreYes","length","reduce","result2","reponses","nombreYesForAll","reponsesGroupe","index","reponsePossible","every","reponse","includes","getResultats"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAY,MAAZ,CAAjB;AACA,MAAMC,YAAY,GAAGF,QAAQ,CAACG,GAAT,CAAcC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAU,OAAV,EAAmB,EAAnB,CAApB,CAArB;AACA,MAAMC,mBAAmB,GAAGJ,YAAY,CAACC,GAAb,CAAkBC,CAAD,IAAO;AAClD,SAAOL,IAAI,CAACK,CAAC,CAACH,KAAF,CAAQ,EAAR,CAAD,CAAX;AACD,CAF2B,CAA5B;;AAIA,SAASM,OAAT,GAAmB;AACjB,QAAMC,SAAS,GAAGF,mBAAmB,CAACH,GAApB,CAAyBC,CAAD,IAAOA,CAAC,CAACK,MAAjC,CAAlB;AACA,SAAOD,SAAS,CAACE,MAAV,CAAiBZ,UAAjB,CAAP;AACD;;AAED,SAASa,OAAT,GAAmB;AACjB,QAAMC,QAAQ,GAAGZ,QAAQ,CAACG,GAAT,CAAcC,CAAD,IAAOA,CAAC,CAACH,KAAF,CAAQ,IAAR,CAApB,CAAjB;AACA,QAAMY,eAAe,GAAGD,QAAQ,CAACT,GAAT,CAAa,CAACW,cAAD,EAAiBC,KAAjB,KACnCT,mBAAmB,CAACS,KAAD,CAAnB,CACGZ,GADH,CACQa,eAAD,IACHF,cAAc,CAACG,KAAf,CAAsBC,OAAD,IAAaA,OAAO,CAACC,QAAR,CAAiBH,eAAjB,CAAlC,CAFJ,EAIGN,MAJH,CAIUZ,UAJV,CADsB,CAAxB;AAQA,SAAOe,eAAe,CAACH,MAAhB,CAAuBZ,UAAvB,CAAP;AACD;;AAED,eAAe,SAASsB,YAAT,GAAwB;AACrC,SAAO,CAACb,OAAO,EAAR,EAAYI,OAAO,EAAnB,CAAP;AACD","sourcesContent":["import { input } from \"data/input6\"\r\nimport { reducerSum } from \"util/array\"\r\nimport { uniq } from \"lodash\"\r\n\r\nconst dataBrut = input.split(\"\\n\\n\")\r\nconst reponsesBrut = dataBrut.map((a) => a.replace(/(\\n)/g, \"\"))\r\nconst reponsesSansDoublon = reponsesBrut.map((a) => {\r\n  return uniq(a.split(\"\"))\r\n})\r\n\r\nfunction result1() {\r\n  const nombreYes = reponsesSansDoublon.map((a) => a.length)\r\n  return nombreYes.reduce(reducerSum)\r\n}\r\n\r\nfunction result2() {\r\n  const reponses = dataBrut.map((a) => a.split(\"\\n\"))\r\n  const nombreYesForAll = reponses.map((reponsesGroupe, index) =>\r\n    reponsesSansDoublon[index]\r\n      .map((reponsePossible) =>\r\n        reponsesGroupe.every((reponse) => reponse.includes(reponsePossible))\r\n      )\r\n      .reduce(reducerSum)\r\n  )\r\n\r\n  return nombreYesForAll.reduce(reducerSum)\r\n}\r\n\r\nexport default function getResultats() {\r\n  return [result1(), result2()]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}