{"ast":null,"code":"import { input } from \"data/input25\";\n\nfunction result1() {\n  const [card, door] = [...getData()];\n  const cardLoopSize = getLoopSize(card);\n  const doorLoopSize = getLoopSize(door);\n  return transformSubject(card, doorLoopSize);\n}\n\nfunction result2() {\n  return;\n}\n\nexport default function getResultats() {\n  return [result1(), result2()];\n}\n\nfunction getLoopSize(number) {\n  let size = 0;\n  let result = 1;\n  let subjectNumber = 7;\n  const DIVIDER = 20201227;\n\n  while (result !== number) {\n    result = result * subjectNumber % DIVIDER;\n    size++;\n  }\n\n  return size;\n}\n\nfunction transformSubject(number, size) {\n  let result = 1;\n  let subjectNumber = number;\n  const DIVIDER = 20201227;\n\n  for (let index = 0; index < size; index++) {\n    result = result * subjectNumber % DIVIDER;\n  }\n\n  return result;\n}\n\nfunction getData() {\n  return input.split(\"\\n\").map(a => parseInt(a));\n}","map":{"version":3,"sources":["d:/Dev/adventofcode2021/src/days/jour25.js"],"names":["input","result1","card","door","getData","cardLoopSize","getLoopSize","doorLoopSize","transformSubject","result2","getResultats","number","size","result","subjectNumber","DIVIDER","index","split","map","a","parseInt"],"mappings":"AAAA,SAASA,KAAT,QAAsB,cAAtB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,IAAD,EAAOC,IAAP,IAAe,CAAC,GAAGC,OAAO,EAAX,CAArB;AACA,QAAMC,YAAY,GAAGC,WAAW,CAACJ,IAAD,CAAhC;AACA,QAAMK,YAAY,GAAGD,WAAW,CAACH,IAAD,CAAhC;AAEA,SAAOK,gBAAgB,CAACN,IAAD,EAAOK,YAAP,CAAvB;AACD;;AAED,SAASE,OAAT,GAAmB;AACjB;AACD;;AAED,eAAe,SAASC,YAAT,GAAwB;AACrC,SAAO,CAACT,OAAO,EAAR,EAAYQ,OAAO,EAAnB,CAAP;AACD;;AACD,SAASH,WAAT,CAAqBK,MAArB,EAA6B;AAC3B,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,QAAMC,OAAO,GAAG,QAAhB;;AACA,SAAOF,MAAM,KAAKF,MAAlB,EAA0B;AACxBE,IAAAA,MAAM,GAAIA,MAAM,GAAGC,aAAV,GAA2BC,OAApC;AACAH,IAAAA,IAAI;AACL;;AACD,SAAOA,IAAP;AACD;;AAED,SAASJ,gBAAT,CAA0BG,MAA1B,EAAkCC,IAAlC,EAAwC;AACtC,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,aAAa,GAAGH,MAApB;AACA,QAAMI,OAAO,GAAG,QAAhB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,IAA5B,EAAkCI,KAAK,EAAvC,EAA2C;AACzCH,IAAAA,MAAM,GAAIA,MAAM,GAAGC,aAAV,GAA2BC,OAApC;AACD;;AACD,SAAOF,MAAP;AACD;;AAED,SAAST,OAAT,GAAmB;AACjB,SAAOJ,KAAK,CAACiB,KAAN,CAAY,IAAZ,EAAkBC,GAAlB,CAAuBC,CAAD,IAAOC,QAAQ,CAACD,CAAD,CAArC,CAAP;AACD","sourcesContent":["import { input } from \"data/input25\"\r\n\r\nfunction result1() {\r\n  const [card, door] = [...getData()]\r\n  const cardLoopSize = getLoopSize(card)\r\n  const doorLoopSize = getLoopSize(door)\r\n\r\n  return transformSubject(card, doorLoopSize)\r\n}\r\n\r\nfunction result2() {\r\n  return\r\n}\r\n\r\nexport default function getResultats() {\r\n  return [result1(), result2()]\r\n}\r\nfunction getLoopSize(number) {\r\n  let size = 0\r\n  let result = 1\r\n  let subjectNumber = 7\r\n  const DIVIDER = 20201227\r\n  while (result !== number) {\r\n    result = (result * subjectNumber) % DIVIDER\r\n    size++\r\n  }\r\n  return size\r\n}\r\n\r\nfunction transformSubject(number, size) {\r\n  let result = 1\r\n  let subjectNumber = number\r\n  const DIVIDER = 20201227\r\n  for (let index = 0; index < size; index++) {\r\n    result = (result * subjectNumber) % DIVIDER\r\n  }\r\n  return result\r\n}\r\n\r\nfunction getData() {\r\n  return input.split(\"\\n\").map((a) => parseInt(a))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}