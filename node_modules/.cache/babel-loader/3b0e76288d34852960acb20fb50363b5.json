{"ast":null,"code":"import { isArray } from \"lodash\";\nexport const transformData = mydata => {\n  const regexp = new RegExp(\"(.*)-(.*) (.*): (.*)\");\n  return mydata.map(i => {\n    const regex = regexp.exec(i);\n    return {\n      min: regex[1],\n      max: regex[2],\n      lettre: regex[3],\n      pass: regex[4]\n    };\n  });\n};\nexport const reducerSum = (accumulator, currentValue) => accumulator + currentValue;\nexport const reducerAnd = (accumulator, currentValue) => accumulator && currentValue;\nexport const reducerMultiply = (accumulator, currentValue) => accumulator * currentValue;\nexport const repeteData = (data, nRep) => {\n  let newData = [...data];\n  let i = 0;\n\n  while (i < nRep) {\n    newData = newData.map((row, index) => row.concat(data[index]));\n    i++;\n  }\n\n  return newData;\n};\nexport const intersectArray = (array1, array2) => array1.filter(value => array2.includes(value));\nexport function getNbOccurrence(array, value) {\n  return array.filter(v => v === value).length;\n}\nexport function getArrayDepth(value) {\n  return Array.isArray(value) ? 1 + Math.max(...value.map(getArrayDepth)) : 0;\n}\nexport function concatArrayString(string, array) {\n  return array.map(e => string + e);\n}\nexport function concatArrayStringSuffixe(string, array) {\n  return array.map(e => e + string);\n}\nexport function concatUnionArrays(inputA, inputB) {\n  let result;\n  const a = isArray(inputA) ? flatDeep(inputA) : inputA;\n  const b = isArray(inputB) ? flatDeep(inputB) : inputB;\n\n  if (isArray(b) && isArray(a)) {\n    result = b.map(string => concatArrayStringSuffixe(string, a));\n  } else if (isArray(b) && !isArray(a)) {\n    result = isArray(b[0]) ? b.map(e => concatUnionArrays(a, e)) : concatArrayString(a, b);\n  } else if (!isArray(b) && isArray(a)) {\n    result = isArray(a[0]) ? a.map(e => concatUnionArrays(e, b)) : concatArrayStringSuffixe(b, a);\n  } else {\n    result = a + b;\n  }\n\n  return result;\n}\nexport function flatDeepBis(arr) {\n  return arr.flat(getArrayDepth(arr));\n}\nexport function flatDeep(arr) {\n  return arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val) : val), []);\n}\nexport function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false; // If you don't care about the order of the elements inside\n  // the array, you should sort both arrays here.\n  // Please note that calling sort on an array will modify that array.\n  // you might want to clone your array first.\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\nexport function arrayRotate(arr, reverse) {\n  if (reverse) arr.unshift(arr.pop());else arr.push(arr.shift());\n  return arr;\n}","map":{"version":3,"sources":["d:/Dev/adventofcode2021/src/util/array.js"],"names":["isArray","transformData","mydata","regexp","RegExp","map","i","regex","exec","min","max","lettre","pass","reducerSum","accumulator","currentValue","reducerAnd","reducerMultiply","repeteData","data","nRep","newData","row","index","concat","intersectArray","array1","array2","filter","value","includes","getNbOccurrence","array","v","length","getArrayDepth","Array","Math","concatArrayString","string","e","concatArrayStringSuffixe","concatUnionArrays","inputA","inputB","result","a","flatDeep","b","flatDeepBis","arr","flat","reduce","acc","val","arraysEqual","arrayRotate","reverse","unshift","pop","push","shift"],"mappings":"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","sourcesContent":["import { isArray } from \"lodash\"\r\n\r\nexport const transformData = (mydata) => {\r\n  const regexp = new RegExp(\"(.*)-(.*) (.*): (.*)\")\r\n  return mydata.map((i) => {\r\n    const regex = regexp.exec(i)\r\n    return { min: regex[1], max: regex[2], lettre: regex[3], pass: regex[4] }\r\n  })\r\n}\r\n\r\nexport const reducerSum = (accumulator, currentValue) =>\r\n  accumulator + currentValue\r\nexport const reducerAnd = (accumulator, currentValue) =>\r\n  accumulator && currentValue\r\nexport const reducerMultiply = (accumulator, currentValue) =>\r\n  accumulator * currentValue\r\nexport const repeteData = (data, nRep) => {\r\n  let newData = [...data]\r\n  let i = 0\r\n  while (i < nRep) {\r\n    newData = newData.map((row, index) => row.concat(data[index]))\r\n    i++\r\n  }\r\n  return newData\r\n}\r\n\r\nexport const intersectArray = (array1, array2) =>\r\n  array1.filter((value) => array2.includes(value))\r\n\r\nexport function getNbOccurrence(array, value) {\r\n  return array.filter((v) => v === value).length\r\n}\r\n\r\nexport function getArrayDepth(value) {\r\n  return Array.isArray(value) ? 1 + Math.max(...value.map(getArrayDepth)) : 0\r\n}\r\nexport function concatArrayString(string, array) {\r\n  return array.map((e) => string + e)\r\n}\r\nexport function concatArrayStringSuffixe(string, array) {\r\n  return array.map((e) => e + string)\r\n}\r\n\r\nexport function concatUnionArrays(inputA, inputB) {\r\n  let result\r\n  const a = isArray(inputA) ? flatDeep(inputA) : inputA\r\n  const b = isArray(inputB) ? flatDeep(inputB) : inputB\r\n  if (isArray(b) && isArray(a)) {\r\n    result = b.map((string) => concatArrayStringSuffixe(string, a))\r\n  } else if (isArray(b) && !isArray(a)) {\r\n    result = isArray(b[0])\r\n      ? b.map((e) => concatUnionArrays(a, e))\r\n      : concatArrayString(a, b)\r\n  } else if (!isArray(b) && isArray(a)) {\r\n    result = isArray(a[0])\r\n      ? a.map((e) => concatUnionArrays(e, b))\r\n      : concatArrayStringSuffixe(b, a)\r\n  } else {\r\n    result = a + b\r\n  }\r\n  return result\r\n}\r\n\r\nexport function flatDeepBis(arr) {\r\n  return arr.flat(getArrayDepth(arr))\r\n}\r\n\r\nexport function flatDeep(arr) {\r\n  return arr.reduce(\r\n    (acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val) : val),\r\n    []\r\n  )\r\n}\r\n\r\nexport function arraysEqual(a, b) {\r\n  if (a === b) return true\r\n  if (a == null || b == null) return false\r\n  if (a.length !== b.length) return false\r\n\r\n  // If you don't care about the order of the elements inside\r\n  // the array, you should sort both arrays here.\r\n  // Please note that calling sort on an array will modify that array.\r\n  // you might want to clone your array first.\r\n\r\n  for (var i = 0; i < a.length; ++i) {\r\n    if (a[i] !== b[i]) return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function arrayRotate(arr, reverse) {\r\n  if (reverse) arr.unshift(arr.pop())\r\n  else arr.push(arr.shift())\r\n  return arr\r\n}\r\n"]},"metadata":{},"sourceType":"module"}